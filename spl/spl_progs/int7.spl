alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
alias codeBlock S1;
alias sysCallNo S2;
alias fileName S3;
alias counterFAT S4;
alias counter S5;
alias indexSWOF S6;
alias counterTwo S14;
alias counterOne S7;
alias newPCB S8;
alias newPhysicalSP S9;
alias basicBlock S10;
alias currentPID S11;
alias currentPCB S12;
alias validPage S13;
alias i S15;

currentPID = (PTBR - 1024) / 8;
currentPCB = READY_LIST + 32 * currentPID;


counterOne=0;
codeBlock=0; 
counterFAT=0;
counter=0;
indexSWOF=0;

sysCallNo=[physicalSP-1];


breakpoint;
 

if ( sysCallNo == 10) then

	while(counter<32) do
	if([READY_LIST+counter*32+1]==1) then
		counterOne=counterOne+1;
	endif;
	counter=counter+1;
	endwhile;

	if([currentPCB+1]==2 && counterOne==0) then
		halt;
	
	else
		counter=0;
		while(counter<32 && [READY_LIST+counter*32+1]!=2) do			
			counter=counter+1;		
		endwhile;
		counterTwo=counter;
		
		counter=0;
		while(counter<8) do
			if([currentPCB+15+2*counter]!=-1) then
				indexSWOF=[currentPCB+15+2*counter];
				if([FILE_TABLE+2*indexSWOF+1]==1) then
					[FILE_TABLE+2*indexSWOF]=-1;
					[FILE_TABLE+2*indexSWOF+1]=[FILE_TABLE+2*indexSWOF+1]-1;
				else
					[FILE_TABLE+2*indexSWOF+1]=[FILE_TABLE+2*indexSWOF+1]-1;				
				endif;	
				[currentPCB+15+2*counter]=-1;
				[currentPCB+15+2*counter+1]=-1;
				
			endif;
			counter=counter+1;
		endwhile;

		[currentPCB+1]=0;
		counter=0;
		while(counter<4) do
			if([PTBR+counter*2]!=-1) then
				[MEM_LIST+[PTBR+counter*2]]=0;
				[PTBR+counter*2]=-1;
				[PTBR+counter*2+1]="00";	
			endif;	
			counter=counter+1;
		endwhile;

		i=0;
		counter=currentPCB+32;

		while(i<=32) do
			if([counter+1]==1) then
				newPCB=counter;  				// ****//
				break;
			endif;
			if(counter==READY_LIST+32*31) then
				counter=READY_LIST;
			else
				counter=counter+32;
			endif;
			i=i+1;	
		endwhile;
	
		BP=[newPCB+2];
		SP=[newPCB+3];
		R0=[newPCB+7];
		R1=[newPCB+8];
		R2=[newPCB+9];
		R3=[newPCB+10];
		R4=[newPCB+11];
		R5=[newPCB+12];
		R6=[newPCB+13];
		R7=[newPCB+14];
		PTBR=[newPCB+5];
		PTLR=[newPCB+6];
		SP = SP + 1; 
		 
		newPhysicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512); 
		[newPhysicalSP] = [ newPCB + 4 ]; 
		[newPCB +1]=2;			
		ireturn;			
	endif;	
endif;

